<?xml version='1.0' encoding='utf-8' ?>

<!-- build 20252.25.0514.2217                               -->
<workbook original-version='18.1' source-build='2025.2.0 (20252.25.0514.2217)' source-platform='win' version='18.1' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <document-format-change-manifest>
    <AccessibleZoneTabOrder />
    <AnimationOnByDefault />
    <AutoCreateAndUpdateDSDPhoneLayouts />
    <MarkAnimation />
    <ObjectModelEncapsulateLegacy />
    <ObjectModelExtractV2 />
    <ObjectModelTableType />
    <SchemaViewerObjectModel />
    <SetMembershipControl />
    <SheetIdentifierTracking />
    <_.fcp.VConnDownstreamExtractsWithWarnings.true...VConnDownstreamExtractsWithWarnings />
    <WindowsPersistSimpleIdentifiers />
  </document-format-change-manifest>
  <preferences>
    <preference name='ui.encoding.shelf.height' value='24' />
    <preference name='ui.shelf.height' value='26' />
  </preferences>
  <datasources>
    <datasource caption='daikibo-telemetry-data' inline='true' name='federated.17faedq19rdbmo1b02ez00pme3ty' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='daikibo-telemetry-data' name='semistructpassivestore-direct.0vzc4vc1ilremd12csbp81ph524a'>
            <connection class='semistructpassivestore-direct' directory='C:/Users/Lenovo/Downloads' filename='daikibo-telemetry-data.json' password='' server=''>
              <semistruct-schemas>
                <semistruct-schema table='[daikibo-telemetry-data.json]'>
                  <map key='data' value='true' />
                  <map key='location' value='true' />
                  <map key='{root}' value='true' />
                </semistruct-schema>
              </semistruct-schemas>
            </connection>
          </named-connection>
        </named-connections>
        <relation connection='semistructpassivestore-direct.0vzc4vc1ilremd12csbp81ph524a' name='daikibo-telemetry-data.json' table='[daikibo-telemetry-data.json]' type='table' />
        <cols>
          <map key='[Document Index (generated)]' value='[daikibo-telemetry-data.json].[Document Index (generated)]' />
          <map key='[area]' value='[daikibo-telemetry-data.json].[location.area]' />
          <map key='[city]' value='[daikibo-telemetry-data.json].[location.city]' />
          <map key='[country]' value='[daikibo-telemetry-data.json].[location.country]' />
          <map key='[deviceID]' value='[daikibo-telemetry-data.json].[deviceID]' />
          <map key='[deviceType]' value='[daikibo-telemetry-data.json].[deviceType]' />
          <map key='[factory]' value='[daikibo-telemetry-data.json].[location.factory]' />
          <map key='[section]' value='[daikibo-telemetry-data.json].[location.section]' />
          <map key='[status]' value='[daikibo-telemetry-data.json].[data.status]' />
          <map key='[temperature]' value='[daikibo-telemetry-data.json].[data.temperature]' />
          <map key='[timestamp]' value='[daikibo-telemetry-data.json].[timestamp]' />
        </cols>
        <metadata-records>
          <metadata-record class='column'>
            <remote-name>Document Index (generated)</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Document Index (generated)]</local-name>
            <parent-name>[daikibo-telemetry-data.json]</parent-name>
            <remote-alias>Document Index (generated)</remote-alias>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <object-id>[daikibo-telemetry-data.json_8439C7B18B1C4CFAA6FB5975854A0F81]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>data.status</remote-name>
            <remote-type>130</remote-type>
            <local-name>[status]</local-name>
            <parent-name>[daikibo-telemetry-data.json]</parent-name>
            <remote-alias>data.status</remote-alias>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='0' name='binary' />
            <object-id>[daikibo-telemetry-data.json_8439C7B18B1C4CFAA6FB5975854A0F81]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>data.temperature</remote-name>
            <remote-type>5</remote-type>
            <local-name>[temperature]</local-name>
            <parent-name>[daikibo-telemetry-data.json]</parent-name>
            <remote-alias>data.temperature</remote-alias>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <object-id>[daikibo-telemetry-data.json_8439C7B18B1C4CFAA6FB5975854A0F81]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>deviceID</remote-name>
            <remote-type>130</remote-type>
            <local-name>[deviceID]</local-name>
            <parent-name>[daikibo-telemetry-data.json]</parent-name>
            <remote-alias>deviceID</remote-alias>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='0' name='binary' />
            <object-id>[daikibo-telemetry-data.json_8439C7B18B1C4CFAA6FB5975854A0F81]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>deviceType</remote-name>
            <remote-type>130</remote-type>
            <local-name>[deviceType]</local-name>
            <parent-name>[daikibo-telemetry-data.json]</parent-name>
            <remote-alias>deviceType</remote-alias>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='0' name='binary' />
            <object-id>[daikibo-telemetry-data.json_8439C7B18B1C4CFAA6FB5975854A0F81]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>location.area</remote-name>
            <remote-type>130</remote-type>
            <local-name>[area]</local-name>
            <parent-name>[daikibo-telemetry-data.json]</parent-name>
            <remote-alias>location.area</remote-alias>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='0' name='binary' />
            <object-id>[daikibo-telemetry-data.json_8439C7B18B1C4CFAA6FB5975854A0F81]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>location.city</remote-name>
            <remote-type>130</remote-type>
            <local-name>[city]</local-name>
            <parent-name>[daikibo-telemetry-data.json]</parent-name>
            <remote-alias>location.city</remote-alias>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='0' name='binary' />
            <object-id>[daikibo-telemetry-data.json_8439C7B18B1C4CFAA6FB5975854A0F81]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>location.country</remote-name>
            <remote-type>130</remote-type>
            <local-name>[country]</local-name>
            <parent-name>[daikibo-telemetry-data.json]</parent-name>
            <remote-alias>location.country</remote-alias>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='0' name='binary' />
            <object-id>[daikibo-telemetry-data.json_8439C7B18B1C4CFAA6FB5975854A0F81]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>location.factory</remote-name>
            <remote-type>130</remote-type>
            <local-name>[factory]</local-name>
            <parent-name>[daikibo-telemetry-data.json]</parent-name>
            <remote-alias>location.factory</remote-alias>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='0' name='binary' />
            <object-id>[daikibo-telemetry-data.json_8439C7B18B1C4CFAA6FB5975854A0F81]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>location.section</remote-name>
            <remote-type>130</remote-type>
            <local-name>[section]</local-name>
            <parent-name>[daikibo-telemetry-data.json]</parent-name>
            <remote-alias>location.section</remote-alias>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='0' name='binary' />
            <object-id>[daikibo-telemetry-data.json_8439C7B18B1C4CFAA6FB5975854A0F81]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>timestamp</remote-name>
            <remote-type>5</remote-type>
            <local-name>[timestamp]</local-name>
            <parent-name>[daikibo-telemetry-data.json]</parent-name>
            <remote-alias>timestamp</remote-alias>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <object-id>[daikibo-telemetry-data.json_8439C7B18B1C4CFAA6FB5975854A0F81]</object-id>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column caption='Unhealthy' datatype='integer' name='[Calculation_317785273440428032]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='IF [status]= &quot;unhealthy&quot;THEN 10 ELSE 0 END' />
      </column>
      <column aggregation='Sum' datatype='integer' name='[Document Index (generated)]' role='dimension' type='ordinal'>
        <desc>
          <formatted-text>
            <run>Document Index (generated)</run>
          </formatted-text>
        </desc>
      </column>
      <column caption='daikibo-telemetry-data.json' datatype='table' name='[__tableau_internal_object_id__].[daikibo-telemetry-data.json_8439C7B18B1C4CFAA6FB5975854A0F81]' role='measure' type='quantitative' />
      <column caption='Area' datatype='string' name='[area]' role='dimension' type='nominal'>
        <desc>
          <formatted-text>
            <run>location.area</run>
          </formatted-text>
        </desc>
      </column>
      <column caption='City' datatype='string' name='[city]' role='dimension' semantic-role='[City].[Name]' type='nominal'>
        <desc>
          <formatted-text>
            <run>location.city</run>
          </formatted-text>
        </desc>
      </column>
      <column caption='Country' datatype='string' name='[country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal'>
        <desc>
          <formatted-text>
            <run>location.country</run>
          </formatted-text>
        </desc>
      </column>
      <column caption='Device ID' datatype='string' name='[deviceID]' role='dimension' type='nominal'>
        <desc>
          <formatted-text>
            <run>deviceID</run>
          </formatted-text>
        </desc>
      </column>
      <column caption='Device Type' datatype='string' name='[deviceType]' role='dimension' type='nominal'>
        <desc>
          <formatted-text>
            <run>deviceType</run>
          </formatted-text>
        </desc>
      </column>
      <column caption='Factory' datatype='string' name='[factory]' role='dimension' type='nominal'>
        <desc>
          <formatted-text>
            <run>location.factory</run>
          </formatted-text>
        </desc>
      </column>
      <column caption='Section' datatype='string' name='[section]' role='dimension' type='nominal'>
        <desc>
          <formatted-text>
            <run>location.section</run>
          </formatted-text>
        </desc>
      </column>
      <column caption='Status' datatype='string' name='[status]' role='dimension' type='nominal'>
        <desc>
          <formatted-text>
            <run>data.status</run>
          </formatted-text>
        </desc>
      </column>
      <column caption='Temperature' datatype='real' name='[temperature]' role='measure' type='quantitative'>
        <desc>
          <formatted-text>
            <run>data.temperature</run>
          </formatted-text>
        </desc>
      </column>
      <column caption='Timestamp' datatype='real' name='[timestamp]' role='measure' type='quantitative'>
        <desc>
          <formatted-text>
            <run>timestamp</run>
          </formatted-text>
        </desc>
      </column>
      <group caption='Action (Factory)' hidden='true' name='[Action (Factory)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[factory]' />
        </groupfilter>
      </group>
      <folders-common>
        <folder name='Daikibo-Telemetry-Data'>
          <folder-item name='[Document Index (generated)]' type='field' />
          <folder-item name='[deviceID]' type='field' />
          <folder-item name='[deviceType]' type='field' />
        </folder>
        <folder name='Data'>
          <folder-item name='[Calculation_317785273440428032]' type='field' />
          <folder-item name='[status]' type='field' />
        </folder>
        <folder name='Location'>
          <folder-item name='[area]' type='field' />
          <folder-item name='[city]' type='field' />
          <folder-item name='[country]' type='field' />
          <folder-item name='[factory]' type='field' />
          <folder-item name='[section]' type='field' />
        </folder>
      </folders-common>
      <extract _.fcp.VConnDownstreamExtractsWithWarnings.true...user-specific='false' count='-1' enabled='true' object-id='' units='records'>
        <connection access_mode='readonly' author-locale='en_US' class='hyper' dbname='C:/Users/Lenovo/AppData/Local/Temp/TableauTemp/#TableauTemp_0rhgdy00n4qrr71aw8mbd108xsbb.hyper' default-settings='hyper' schema='Extract' sslmode='' tablename='Extract' update-time='06/25/2025 04:30:47 PM' username='tableau_internal_user'>
          <relation name='Extract' table='[Extract].[Extract]' type='table' />
          <cols>
            <map key='[Document Index (generated)]' value='[Extract].[Document Index (generated)]' />
            <map key='[area]' value='[Extract].[location.area]' />
            <map key='[city]' value='[Extract].[location.city]' />
            <map key='[country]' value='[Extract].[location.country]' />
            <map key='[deviceID]' value='[Extract].[deviceID]' />
            <map key='[deviceType]' value='[Extract].[deviceType]' />
            <map key='[factory]' value='[Extract].[location.factory]' />
            <map key='[section]' value='[Extract].[location.section]' />
            <map key='[status]' value='[Extract].[data.status]' />
            <map key='[temperature]' value='[Extract].[data.temperature]' />
            <map key='[timestamp]' value='[Extract].[timestamp]' />
          </cols>
          <metadata-records>
            <metadata-record class='column'>
              <remote-name>Document Index (generated)</remote-name>
              <remote-type>20</remote-type>
              <local-name>[Document Index (generated)]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Document Index (generated)</remote-alias>
              <ordinal>0</ordinal>
              <family>daikibo-telemetry-data.json</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>160704</approx-count>
              <contains-null>true</contains-null>
              <object-id>[daikibo-telemetry-data.json_8439C7B18B1C4CFAA6FB5975854A0F81]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>data.status</remote-name>
              <remote-type>129</remote-type>
              <local-name>[status]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>data.status</remote-alias>
              <ordinal>1</ordinal>
              <family>daikibo-telemetry-data.json</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>1</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='binary' />
              <object-id>[daikibo-telemetry-data.json_8439C7B18B1C4CFAA6FB5975854A0F81]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>data.temperature</remote-name>
              <remote-type>5</remote-type>
              <local-name>[temperature]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>data.temperature</remote-alias>
              <ordinal>2</ordinal>
              <family>daikibo-telemetry-data.json</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>5</approx-count>
              <contains-null>true</contains-null>
              <object-id>[daikibo-telemetry-data.json_8439C7B18B1C4CFAA6FB5975854A0F81]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>deviceID</remote-name>
              <remote-type>129</remote-type>
              <local-name>[deviceID]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>deviceID</remote-alias>
              <ordinal>3</ordinal>
              <family>daikibo-telemetry-data.json</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>36</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='binary' />
              <object-id>[daikibo-telemetry-data.json_8439C7B18B1C4CFAA6FB5975854A0F81]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>deviceType</remote-name>
              <remote-type>129</remote-type>
              <local-name>[deviceType]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>deviceType</remote-alias>
              <ordinal>4</ordinal>
              <family>daikibo-telemetry-data.json</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>9</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='binary' />
              <object-id>[daikibo-telemetry-data.json_8439C7B18B1C4CFAA6FB5975854A0F81]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>location.area</remote-name>
              <remote-type>129</remote-type>
              <local-name>[area]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>location.area</remote-alias>
              <ordinal>5</ordinal>
              <family>daikibo-telemetry-data.json</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>4</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='binary' />
              <object-id>[daikibo-telemetry-data.json_8439C7B18B1C4CFAA6FB5975854A0F81]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>location.city</remote-name>
              <remote-type>129</remote-type>
              <local-name>[city]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>location.city</remote-alias>
              <ordinal>6</ordinal>
              <family>daikibo-telemetry-data.json</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>4</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='binary' />
              <object-id>[daikibo-telemetry-data.json_8439C7B18B1C4CFAA6FB5975854A0F81]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>location.country</remote-name>
              <remote-type>129</remote-type>
              <local-name>[country]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>location.country</remote-alias>
              <ordinal>7</ordinal>
              <family>daikibo-telemetry-data.json</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>3</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='binary' />
              <object-id>[daikibo-telemetry-data.json_8439C7B18B1C4CFAA6FB5975854A0F81]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>location.factory</remote-name>
              <remote-type>129</remote-type>
              <local-name>[factory]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>location.factory</remote-alias>
              <ordinal>8</ordinal>
              <family>daikibo-telemetry-data.json</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>4</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='binary' />
              <object-id>[daikibo-telemetry-data.json_8439C7B18B1C4CFAA6FB5975854A0F81]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>location.section</remote-name>
              <remote-type>129</remote-type>
              <local-name>[section]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>location.section</remote-alias>
              <ordinal>9</ordinal>
              <family>daikibo-telemetry-data.json</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>4</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='binary' />
              <object-id>[daikibo-telemetry-data.json_8439C7B18B1C4CFAA6FB5975854A0F81]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>timestamp</remote-name>
              <remote-type>5</remote-type>
              <local-name>[timestamp]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>timestamp</remote-alias>
              <ordinal>10</ordinal>
              <family>daikibo-telemetry-data.json</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>6229</approx-count>
              <contains-null>true</contains-null>
              <object-id>[daikibo-telemetry-data.json_8439C7B18B1C4CFAA6FB5975854A0F81]</object-id>
            </metadata-record>
          </metadata-records>
        </connection>
      </extract>
      <layout dim-ordering='alphabetic' measure-ordering='alphabetic' show-structure='false' />
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;India&quot;' />
      </semantic-values>
      <field-sort-info field-sort-order-type='custom-order'>
        <field-sort-custom-order field='Document Index (generated)' />
        <field-sort-custom-order field='status' />
        <field-sort-custom-order field='Calculation_317785273440428032' />
        <field-sort-custom-order field='temperature' />
        <field-sort-custom-order field='deviceID' />
        <field-sort-custom-order field='deviceType' />
        <field-sort-custom-order field='area' />
        <field-sort-custom-order field='city' />
        <field-sort-custom-order field='country' />
        <field-sort-custom-order field='factory' />
        <field-sort-custom-order field='section' />
        <field-sort-custom-order field='timestamp' />
        <field-sort-custom-order field='Geometry (generated)' />
        <field-sort-custom-order field='Latitude (generated)' />
        <field-sort-custom-order field='Longitude (generated)' />
        <field-sort-custom-order field=':Measure Names' />
        <field-sort-custom-order field='Multiple Values' />
      </field-sort-info>
      <object-graph>
        <objects>
          <object caption='daikibo-telemetry-data.json' id='daikibo-telemetry-data.json_8439C7B18B1C4CFAA6FB5975854A0F81'>
            <properties context=''>
              <relation connection='semistructpassivestore-direct.0vzc4vc1ilremd12csbp81ph524a' name='daikibo-telemetry-data.json' table='[daikibo-telemetry-data.json]' type='table' />
            </properties>
            <properties context='extract'>
              <relation name='Extract' table='[Extract].[Extract]' type='table' />
            </properties>
          </object>
        </objects>
      </object-graph>
    </datasource>
  </datasources>
  <actions>
    <action caption='Filter 1 (generated)' name='[Action1_2E983C9AE52A41AC914CE2A195E8C02C]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='Dashboard 1' type='sheet' worksheet='Sheet 2' />
      <command command='tsc:tsl-filter'>
        <param name='special-fields' value='all' />
        <param name='target' value='Dashboard 1' />
      </command>
    </action>
  </actions>
  <worksheets>
    <worksheet name='Sheet 2'>
      <table>
        <view>
          <datasources>
            <datasource caption='daikibo-telemetry-data' name='federated.17faedq19rdbmo1b02ez00pme3ty' />
          </datasources>
          <datasource-dependencies datasource='federated.17faedq19rdbmo1b02ez00pme3ty'>
            <column caption='Unhealthy' datatype='integer' name='[Calculation_317785273440428032]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IF [status]= &quot;unhealthy&quot;THEN 10 ELSE 0 END' />
            </column>
            <column caption='Factory' datatype='string' name='[factory]' role='dimension' type='nominal'>
              <desc>
                <formatted-text>
                  <run>location.factory</run>
                </formatted-text>
              </desc>
            </column>
            <column-instance column='[factory]' derivation='None' name='[none:factory:nk]' pivot='key' type='nominal' />
            <column caption='Status' datatype='string' name='[status]' role='dimension' type='nominal'>
              <desc>
                <formatted-text>
                  <run>data.status</run>
                </formatted-text>
              </desc>
            </column>
            <column-instance column='[Calculation_317785273440428032]' derivation='Sum' name='[sum:Calculation_317785273440428032:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
          </pane>
        </panes>
        <rows>[federated.17faedq19rdbmo1b02ez00pme3ty].[sum:Calculation_317785273440428032:qk]</rows>
        <cols>[federated.17faedq19rdbmo1b02ez00pme3ty].[none:factory:nk]</cols>
      </table>
      <simple-id uuid='{0AD7B9DF-6D1A-4059-B806-644426E58049}' />
    </worksheet>
    <worksheet name='Sheet 3'>
      <table>
        <view>
          <datasources>
            <datasource caption='daikibo-telemetry-data' name='federated.17faedq19rdbmo1b02ez00pme3ty' />
          </datasources>
          <datasource-dependencies datasource='federated.17faedq19rdbmo1b02ez00pme3ty'>
            <column caption='Unhealthy' datatype='integer' name='[Calculation_317785273440428032]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IF [status]= &quot;unhealthy&quot;THEN 10 ELSE 0 END' />
            </column>
            <column caption='Device Type' datatype='string' name='[deviceType]' role='dimension' type='nominal'>
              <desc>
                <formatted-text>
                  <run>deviceType</run>
                </formatted-text>
              </desc>
            </column>
            <column caption='Factory' datatype='string' name='[factory]' role='dimension' type='nominal'>
              <desc>
                <formatted-text>
                  <run>location.factory</run>
                </formatted-text>
              </desc>
            </column>
            <column-instance column='[deviceType]' derivation='None' name='[none:deviceType:nk]' pivot='key' type='nominal' />
            <column caption='Status' datatype='string' name='[status]' role='dimension' type='nominal'>
              <desc>
                <formatted-text>
                  <run>data.status</run>
                </formatted-text>
              </desc>
            </column>
            <column-instance column='[Calculation_317785273440428032]' derivation='Sum' name='[sum:Calculation_317785273440428032:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.17faedq19rdbmo1b02ez00pme3ty].[Action (Factory)]'>
            <groupfilter function='member' level='[factory]' member='&quot;daikibo-factory-meiyo&quot;' user:ui-action-filter='[Action1_2E983C9AE52A41AC914CE2A195E8C02C]' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.17faedq19rdbmo1b02ez00pme3ty].[Action (Factory)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
          </pane>
        </panes>
        <rows>[federated.17faedq19rdbmo1b02ez00pme3ty].[sum:Calculation_317785273440428032:qk]</rows>
        <cols>[federated.17faedq19rdbmo1b02ez00pme3ty].[none:deviceType:nk]</cols>
      </table>
      <simple-id uuid='{10B6E21F-954A-41F2-83B9-AA24CA3CC323}' />
    </worksheet>
  </worksheets>
  <dashboards>
    <dashboard enable-sort-zone-taborder='true' name='Dashboard 1'>
      <style />
      <size maxheight='860' maxwidth='650' minheight='560' minwidth='420' />
      <zones>
        <zone h='100000' id='4' type-v2='layout-basic' w='100000' x='0' y='0'>
          <zone h='48651' id='5' name='Sheet 3' w='97538' x='1231' y='50000'>
            <zone-style>
              <format attr='border-color' value='#000000' />
              <format attr='border-style' value='none' />
              <format attr='border-width' value='0' />
              <format attr='margin' value='4' />
            </zone-style>
          </zone>
          <zone h='48651' id='6' name='Sheet 2' w='97538' x='1231' y='1349'>
            <zone-style>
              <format attr='border-color' value='#000000' />
              <format attr='border-style' value='none' />
              <format attr='border-width' value='0' />
              <format attr='margin' value='4' />
            </zone-style>
          </zone>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='8' />
          </zone-style>
        </zone>
      </zones>
      <devicelayouts>
        <devicelayout auto-generated='true' name='Phone'>
          <size maxheight='700' minheight='700' sizing-mode='vscroll' />
          <zones>
            <zone h='100000' id='8' type-v2='layout-basic' w='100000' x='0' y='0'>
              <zone h='97302' id='7' param='vert' type-v2='layout-flow' w='97538' x='1231' y='1349'>
                <zone fixed-size='280' h='48651' id='6' is-fixed='true' name='Sheet 2' w='97538' x='1231' y='1349'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='48651' id='5' is-fixed='true' name='Sheet 3' w='97538' x='1231' y='50000'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
              </zone>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='8' />
              </zone-style>
            </zone>
          </zones>
        </devicelayout>
      </devicelayouts>
      <simple-id uuid='{7DA9E497-DCFF-49AE-BBCB-65C29D3FADE6}' />
    </dashboard>
  </dashboards>
  <windows source-height='30'>
    <window class='worksheet' name='Sheet 3'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.17faedq19rdbmo1b02ez00pme3ty].[none:deviceType:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{4DF2F4C6-8A80-4770-BD6A-2700D7F12A09}' />
    </window>
    <window class='worksheet' name='Sheet 2'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.17faedq19rdbmo1b02ez00pme3ty].[none:factory:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{9F9E040D-15E8-4C57-B16C-3663D2D8A006}' />
    </window>
    <window class='dashboard' maximized='true' name='Dashboard 1'>
      <viewpoints>
        <viewpoint name='Sheet 2'>
          <zoom type='entire-view' />
          <selection-collection>
            <tuple-selection>
              <tuple-reference>
                <tuple-descriptor>
                  <pane-descriptor>
                    <x-fields>
                      <field>[federated.17faedq19rdbmo1b02ez00pme3ty].[none:factory:nk]</field>
                    </x-fields>
                    <y-fields>
                      <field>[federated.17faedq19rdbmo1b02ez00pme3ty].[sum:Calculation_317785273440428032:qk]</field>
                    </y-fields>
                  </pane-descriptor>
                  <columns>
                    <field>[federated.17faedq19rdbmo1b02ez00pme3ty].[none:factory:nk]</field>
                    <field>[federated.17faedq19rdbmo1b02ez00pme3ty].[sum:Calculation_317785273440428032:qk]</field>
                  </columns>
                </tuple-descriptor>
                <tuple>
                  <value>&quot;daikibo-factory-meiyo&quot;</value>
                  <value>110</value>
                </tuple>
              </tuple-reference>
            </tuple-selection>
          </selection-collection>
        </viewpoint>
        <viewpoint name='Sheet 3'>
          <zoom type='entire-view' />
        </viewpoint>
      </viewpoints>
      <active id='6' />
      <simple-id uuid='{F78ACE16-5C1C-4C77-A8E9-1BF9BA92AF87}' />
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='192' name='Dashboard 1' width='192'>
      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
      YII=
    </thumbnail>
    <thumbnail height='192' name='Sheet 2' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Sheet 3' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAYAAABS3GwHAAAACXBIWXMAAA7DAAAOwwHHb6hk
      AAATAUlEQVR4nO3d6W8c933H8fccu9yLy/smxUOURN22cyDKVaNJ3QSom6Kogz5ogxbo/1E/
      6r/QBy3gB8mTIOkVtHaaGE0d1E4cO5Fs3aLEe7nLJfe+d2Z+vz6gLNsxTVra5YrSfF8A4RWN
      /c13duazv9mZ4X4NrbVGCJ8yH3cBQjxOEgDhaxIA4WsSAOFrEgAfKuczpNIZXPXp5z92trdR
      e/4fxU5qk0QiQTpbOKwSO0YC4EO/+s8f8Yu33uSV7/8LDa3J7WxRrju4rovWGtd1KeRyKDT5
      TJpqw6Waz+AoDSiWrr3DP7/yA24uJ3BcD7SH4zjUqyUy+TIA+UyaUq35eFf0M7AfdwGi8wwr
      wvN//CLLP/0nfvH6G2SrNWrbWWIRzVefv8Rvrm9RSC9RSd7iVjHM6YkY797YhK4e/valb/LF
      rz3P7QxcujDDj3/4Iy5OBVm1Rrn3/iJ9VpFjZ86znKrgFTK89L3vEQs87jX+dDID+JHWNGol
      1rZdbK+AaYc5c2aeL50e5l9fe4up2QW0UhRqTZ774iVGuk1cbXBqbuRjw5iBMDP9Bv92ucDn
      psLMLFzgzOwQyUQaKxji1Jl5PuU46siQAPjQxPEpfv36zzjzjT/nD772VXrcLGXXZOz8JWbj
      /SzM9vHMxYt84Utf4eZbP2PHmuDUSAAjEN0dwApx4ewChobZ2SlmTpwkYMCtd94gYUzzpy++
      wKBRpNgwCFiPd10PYsiVYPGotPK48ptfM3Xu88RUno0czE+PHPzEI6SjAVBKYZoy6YijoyMf
      gpXaPRB0XRfLOuJzovCVlt+OCztJ7t69S77SpFbc4d5aCg1U82mWNtJ8ML3IkZY4ilqeAVYT
      KY7PnyRge9xaSjHVH+DOsqZWKTEWh7WtMNMj3cDuTCAzgDhKWp4BdL3I9evXSedqhKIRekbH
      qWysEu3rpadnkFo12446hTgULc4AHvNnP4/pZbmxWsA2alTz2wT7h6gUypQNg2Ag3p5KhTgE
      LQbAIJtOUG4anF6Yo5ZNksg6LJyZJbu5Tr6umZ4daE+lQhyCjp4GdRyHQOAIXxcXviP3Aomn
      Qq5Uo1BuPPTzJADiqfDa23f54f9cf+jnyWVZ4WsSAOFrEgDhaxIA4WsSAOFrEgDhaxIA4WsS
      AOFrEgDhaxIA4WsSAOFrEgDhaxIA4WsSAOFrEgDhaxIA4WvyBzHi0CW2i/zDD/6vLWP93Z88
      y7MnxtoyFkgARAc0XcXGdrEtY9UablvG+YAcAglfkwAIX5MACF+TAAhfkwAIX5MACF9rQwA0
      jVoNT2ncRo18sYIGnEaVQqmKdAUQR1nL1wHcepk33/g1F758ifTqPYKWojg4SyG1TtDW1MZO
      MtoXaketQrRdiwHQrC2vMDg2gttwsSIx5qaHeO/tW0SnpznWHWA1m2YoPoFSCqUUzebRb54s
      2st1nTaO5e65D3me90jjtRaARpGljS3qpQI1QkS7NMqpYIQiNBsubtjDNINYloVlWfLt0D5l
      2+3b5rZtEwwGP/H7R+081FoAunr45h99k2w6RVe8n2xiiWt3djh54TRbS4sspzTHTy60tAgh
      DlNb7gXqHx4FIHp8gan7v5s9dbodQwtxqOQ0qPA1CYDwNQmA8DUJgPA1CYDwNQmA8DUJgPA1
      CYDwNQmA8DUJgPA1CYDwNQmA8DUJgPA1CYDwNQmA8DUJgPA1CYDwNQmA8DUJgPA1CYDwNQmA
      8DUJgPA1CYDwNQmA8DUJgPA1CYDwNQmA8DUJgPA1CYDwtZa/HXrt7k1K1Trx8Xmc7WVyFYe5
      s+fZWbpBqQnHF87TE360724X4rC1HICRsXHUxirlYhnDjvDMhT6uXr5O1+gYCz0Wia0U3cfG
      0FqjtcZ129vqXhx9Sj1a95a9x1J77kNaqUcar+UWSaZlY1gmqulg2YBp4jkOpmlgAJ5WGIbx
      4BkffSz8YXdPaON4e+1Dj7hftRgAh7t37uJqh1DvMM38NlevZJi6eIHknZvczmim5i9gGMaD
      n0dtZSOeXIbZvo+apmnuuQ896htriwEIsnD+PEqBaZlwbAitNaZpMvTcMygNVhtXXoh2O3jv
      dBvsZAt4au+Ov4ZhYlkmBrspNO/v8IZhys4vjryDZwCvzuW3f0k2X2N4Zp4vff4ZwgHZscXT
      4TPsyYpqqUSl6RAy6vzizXcPvyohOuTgGUAp+sZmGA1aDI7PcWlqqANlCdEZB84ATmGdm8kq
      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
      Hrt3moGwy/8D3IIvS+gukiwAAAAASUVORK5CYII=
    </thumbnail>
  </thumbnails>
</workbook>
